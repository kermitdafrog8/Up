#############################################################################
# Makefile for building: libFATX.a
# Generated by qmake (2.01a) (Qt 4.8.0) on: Sun Nov 18 10:29:47 2012
# Project:  FATX.pro
# Template: lib
# Command: /usr/bin/qmake -o Makefile FATX.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DUNICODE -D_UNICODE -DQT_NO_DEBUG -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -march=i686 -mtune=generic -O2 -pipe -fstack-protector --param=ssp-buffer-size=4 -D_FORTIFY_SOURCE=2 -fPIC -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -std=c++0x -march=i686 -mtune=generic -O2 -pipe -fstack-protector --param=ssp-buffer-size=4 -D_FORTIFY_SOURCE=2 -fPIC -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt/mkspecs/linux-g++ -I. -I/usr/include/QtCore -I/usr/include -I.
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = FATX/Helpers.cpp \
		FATX/Drive.cpp \
		FATX/stfspackage.cpp \
		src/convert.cpp \
		src/streambuf.cpp \
		FATX/pcutils.cpp \
		IO/xMultiFileStream.cpp \
		IO/xFileStream.cpp \
		IO/xDeviceStream.cpp \
		IO/xDeviceFileStream.cpp \
		IO/IStream.cpp \
		stdafx.cpp moc_Drive.cpp
OBJECTS       = Helpers.o \
		Drive.o \
		stfspackage.o \
		convert.o \
		streambuf.o \
		pcutils.o \
		xMultiFileStream.o \
		xFileStream.o \
		xDeviceStream.o \
		xDeviceFileStream.o \
		IStream.o \
		stdafx.o \
		moc_Drive.o
DIST          = /usr/share/qt/mkspecs/common/unix.conf \
		/usr/share/qt/mkspecs/common/linux.conf \
		/usr/share/qt/mkspecs/common/gcc-base.conf \
		/usr/share/qt/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt/mkspecs/common/g++-base.conf \
		/usr/share/qt/mkspecs/common/g++-unix.conf \
		/usr/share/qt/mkspecs/qconfig.pri \
		/usr/share/qt/mkspecs/modules/qt_phonon.pri \
		/usr/share/qt/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt/mkspecs/features/qt_functions.prf \
		/usr/share/qt/mkspecs/features/qt_config.prf \
		/usr/share/qt/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt/mkspecs/features/default_pre.prf \
		/usr/share/qt/mkspecs/features/release.prf \
		/usr/share/qt/mkspecs/features/default_post.prf \
		/usr/share/qt/mkspecs/features/staticlib.prf \
		/usr/share/qt/mkspecs/features/static.prf \
		/usr/share/qt/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt/mkspecs/features/warn_on.prf \
		/usr/share/qt/mkspecs/features/qt.prf \
		/usr/share/qt/mkspecs/features/unix/thread.prf \
		/usr/share/qt/mkspecs/features/moc.prf \
		/usr/share/qt/mkspecs/features/resources.prf \
		/usr/share/qt/mkspecs/features/uic.prf \
		/usr/share/qt/mkspecs/features/yacc.prf \
		/usr/share/qt/mkspecs/features/lex.prf \
		/usr/share/qt/mkspecs/features/include_source_dir.prf \
		FATX.pro
QMAKE_TARGET  = FATX
DESTDIR       = 
TARGET        = libFATX.a

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET) 

staticlib: $(TARGET)

$(TARGET):  $(OBJECTS) $(OBJCOMP) 
	-$(DEL_FILE) $(TARGET)
	$(AR) $(TARGET) $(OBJECTS)


Makefile: FATX.pro  /usr/share/qt/mkspecs/linux-g++/qmake.conf /usr/share/qt/mkspecs/common/unix.conf \
		/usr/share/qt/mkspecs/common/linux.conf \
		/usr/share/qt/mkspecs/common/gcc-base.conf \
		/usr/share/qt/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt/mkspecs/common/g++-base.conf \
		/usr/share/qt/mkspecs/common/g++-unix.conf \
		/usr/share/qt/mkspecs/qconfig.pri \
		/usr/share/qt/mkspecs/modules/qt_phonon.pri \
		/usr/share/qt/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt/mkspecs/features/qt_functions.prf \
		/usr/share/qt/mkspecs/features/qt_config.prf \
		/usr/share/qt/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt/mkspecs/features/default_pre.prf \
		/usr/share/qt/mkspecs/features/release.prf \
		/usr/share/qt/mkspecs/features/default_post.prf \
		/usr/share/qt/mkspecs/features/staticlib.prf \
		/usr/share/qt/mkspecs/features/static.prf \
		/usr/share/qt/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt/mkspecs/features/warn_on.prf \
		/usr/share/qt/mkspecs/features/qt.prf \
		/usr/share/qt/mkspecs/features/unix/thread.prf \
		/usr/share/qt/mkspecs/features/moc.prf \
		/usr/share/qt/mkspecs/features/resources.prf \
		/usr/share/qt/mkspecs/features/uic.prf \
		/usr/share/qt/mkspecs/features/yacc.prf \
		/usr/share/qt/mkspecs/features/lex.prf \
		/usr/share/qt/mkspecs/features/include_source_dir.prf \
		/usr/lib/libQtCore.prl
	$(QMAKE) -o Makefile FATX.pro
/usr/share/qt/mkspecs/common/unix.conf:
/usr/share/qt/mkspecs/common/linux.conf:
/usr/share/qt/mkspecs/common/gcc-base.conf:
/usr/share/qt/mkspecs/common/gcc-base-unix.conf:
/usr/share/qt/mkspecs/common/g++-base.conf:
/usr/share/qt/mkspecs/common/g++-unix.conf:
/usr/share/qt/mkspecs/qconfig.pri:
/usr/share/qt/mkspecs/modules/qt_phonon.pri:
/usr/share/qt/mkspecs/modules/qt_webkit_version.pri:
/usr/share/qt/mkspecs/features/qt_functions.prf:
/usr/share/qt/mkspecs/features/qt_config.prf:
/usr/share/qt/mkspecs/features/exclusive_builds.prf:
/usr/share/qt/mkspecs/features/default_pre.prf:
/usr/share/qt/mkspecs/features/release.prf:
/usr/share/qt/mkspecs/features/default_post.prf:
/usr/share/qt/mkspecs/features/staticlib.prf:
/usr/share/qt/mkspecs/features/static.prf:
/usr/share/qt/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/share/qt/mkspecs/features/warn_on.prf:
/usr/share/qt/mkspecs/features/qt.prf:
/usr/share/qt/mkspecs/features/unix/thread.prf:
/usr/share/qt/mkspecs/features/moc.prf:
/usr/share/qt/mkspecs/features/resources.prf:
/usr/share/qt/mkspecs/features/uic.prf:
/usr/share/qt/mkspecs/features/yacc.prf:
/usr/share/qt/mkspecs/features/lex.prf:
/usr/share/qt/mkspecs/features/include_source_dir.prf:
/usr/lib/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -o Makefile FATX.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/FATX1.0.0 || $(MKDIR) .tmp/FATX1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/FATX1.0.0/ && $(COPY_FILE) --parents FATX/StaticInformation.h FATX/Helpers.h FATX/Drive.h FATX/stfspackage.h nowide/config.h nowide/convert.h nowide/cstdio.h nowide/fstream.h nowide/streambuf.h FATX/pcutils.h IO/xMultiFileStream.h IO/xFileStream.h IO/xDeviceStream.h IO/xDeviceFileStream.h IO/IStream.h stdafx.h typedefs.h xexception.h .tmp/FATX1.0.0/ && $(COPY_FILE) --parents FATX/Helpers.cpp FATX/Drive.cpp FATX/stfspackage.cpp src/convert.cpp src/streambuf.cpp FATX/pcutils.cpp IO/xMultiFileStream.cpp IO/xFileStream.cpp IO/xDeviceStream.cpp IO/xDeviceFileStream.cpp IO/IStream.cpp stdafx.cpp .tmp/FATX1.0.0/ && (cd `dirname .tmp/FATX1.0.0` && $(TAR) FATX1.0.0.tar FATX1.0.0 && $(COMPRESS) FATX1.0.0.tar) && $(MOVE) `dirname .tmp/FATX1.0.0`/FATX1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/FATX1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_Drive.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_Drive.cpp
moc_Drive.cpp: IO/xDeviceStream.h \
		IO/IStream.h \
		stdafx.h \
		typedefs.h \
		FATX/Helpers.h \
		FATX/StaticInformation.h \
		nowide/convert.h \
		nowide/config.h \
		IO/xFileStream.h \
		IO/xMultiFileStream.h \
		FATX/Drive.h
	/usr/bin/moc $(DEFINES) $(INCPATH) FATX/Drive.h -o moc_Drive.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean 

####### Compile

Helpers.o: FATX/Helpers.cpp FATX/Helpers.h \
		typedefs.h \
		FATX/StaticInformation.h \
		nowide/convert.h \
		nowide/config.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Helpers.o FATX/Helpers.cpp

Drive.o: FATX/Drive.cpp FATX/Drive.h \
		IO/xDeviceStream.h \
		IO/IStream.h \
		stdafx.h \
		typedefs.h \
		FATX/Helpers.h \
		FATX/StaticInformation.h \
		nowide/convert.h \
		nowide/config.h \
		IO/xFileStream.h \
		IO/xMultiFileStream.h \
		IO/xDeviceFileStream.h \
		FATX/stfspackage.h \
		xexception.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Drive.o FATX/Drive.cpp

stfspackage.o: FATX/stfspackage.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o stfspackage.o FATX/stfspackage.cpp

convert.o: src/convert.cpp nowide/convert.h \
		nowide/config.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o convert.o src/convert.cpp

streambuf.o: src/streambuf.cpp nowide/streambuf.h \
		nowide/config.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o streambuf.o src/streambuf.cpp

pcutils.o: FATX/pcutils.cpp FATX/pcutils.h \
		FATX/Drive.h \
		IO/xDeviceStream.h \
		IO/IStream.h \
		stdafx.h \
		typedefs.h \
		FATX/Helpers.h \
		FATX/StaticInformation.h \
		nowide/convert.h \
		nowide/config.h \
		IO/xFileStream.h \
		IO/xMultiFileStream.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o pcutils.o FATX/pcutils.cpp

xMultiFileStream.o: IO/xMultiFileStream.cpp IO/xMultiFileStream.h \
		IO/xFileStream.h \
		typedefs.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o xMultiFileStream.o IO/xMultiFileStream.cpp

xFileStream.o: IO/xFileStream.cpp IO/xFileStream.h \
		typedefs.h \
		xexception.h \
		nowide/convert.h \
		nowide/config.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o xFileStream.o IO/xFileStream.cpp

xDeviceStream.o: IO/xDeviceStream.cpp IO/xDeviceStream.h \
		IO/IStream.h \
		stdafx.h \
		typedefs.h \
		FATX/Helpers.h \
		FATX/StaticInformation.h \
		nowide/convert.h \
		nowide/config.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o xDeviceStream.o IO/xDeviceStream.cpp

xDeviceFileStream.o: IO/xDeviceFileStream.cpp IO/xDeviceFileStream.h \
		FATX/StaticInformation.h \
		typedefs.h \
		FATX/Drive.h \
		IO/xDeviceStream.h \
		IO/IStream.h \
		stdafx.h \
		FATX/Helpers.h \
		nowide/convert.h \
		nowide/config.h \
		IO/xFileStream.h \
		IO/xMultiFileStream.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o xDeviceFileStream.o IO/xDeviceFileStream.cpp

IStream.o: IO/IStream.cpp stdafx.h \
		IO/IStream.h \
		typedefs.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o IStream.o IO/IStream.cpp

stdafx.o: stdafx.cpp stdafx.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o stdafx.o stdafx.cpp

moc_Drive.o: moc_Drive.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_Drive.o moc_Drive.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

